// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_Iscu_Paula.Data;

namespace Proiect_Iscu_Paula.Migrations
{
    [DbContext(typeof(Proiect_Iscu_PaulaContext))]
    [Migration("20210104134204_Categorii")]
    partial class Categorii
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proiect_Iscu_Paula.Models.Categorii", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriiID")
                        .HasColumnType("int");

                    b.Property<int?>("HaineID")
                        .HasColumnType("int");

                    b.Property<string>("NumeleCategoriei")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoriiID");

                    b.HasIndex("HaineID");

                    b.ToTable("Categorii");
                });

            modelBuilder.Entity("Proiect_Iscu_Paula.Models.Haine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPublicarii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("PublicareID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PublicareID");

                    b.ToTable("Haine");
                });

            modelBuilder.Entity("Proiect_Iscu_Paula.Models.Publicare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumelePublicarii")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Publicare");
                });

            modelBuilder.Entity("Proiect_Iscu_Paula.Models.Categorii", b =>
                {
                    b.HasOne("Proiect_Iscu_Paula.Models.Categorii", null)
                        .WithMany("CategoriiH")
                        .HasForeignKey("CategoriiID");

                    b.HasOne("Proiect_Iscu_Paula.Models.Haine", null)
                        .WithMany("CategoriiH")
                        .HasForeignKey("HaineID");
                });

            modelBuilder.Entity("Proiect_Iscu_Paula.Models.Haine", b =>
                {
                    b.HasOne("Proiect_Iscu_Paula.Models.Publicare", "Publicare")
                        .WithMany("Haine1")
                        .HasForeignKey("PublicareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
